SUBDIRS = libbuzztard-core . songio

if USE_GCONF
GCONF_SETTINGS_SRC = gconf-settings.c libbuzztard-core/gconf-settings.h
else
GCONF_SETTINGS_SRC =
endif

# these sources (also mentioned above) are generated.
BUILT_SOURCES = marshal.h marshal.c

lib_LTLIBRARIES = libbuzztard-core.la
libbuzztard_core_la_LIBADD = \
	$(top_builddir)/src/lib/ic/libbuzztard-ic.la \
	$(BASE_DEPS_LIBS) $(BT_LIBS) $(LIBM) \
	-lgstaudio-0.10 -lgstpbutils-0.10
libbuzztard_core_la_LDFLAGS = \
	$(BT_LDFLAGS) \
	-export-symbols-regex ^_?\(bt_\|Bt\|BT_\).* \
	-version-info @BT_VERSION_INFO@
libbuzztard_core_la_SOURCES = \
	core.c libbuzztard-core/core.h \
	tools.c libbuzztard-core/tools.h \
	libbuzztard-core/version.h \
	buzzcallbacks.c \
	\
	application.c libbuzztard-core/application.h\
	childproxy.c libbuzztard-core/childproxy.h\
	$(GCONF_SETTINGS_SRC) \
	machine.c libbuzztard-core/machine.h \
	pattern.c libbuzztard-core/pattern.h \
	persistence.c libbuzztard-core/persistence.h \
	processor-machine.c libbuzztard-core/processor-machine.h \
	sequence.c libbuzztard-core/sequence.h \
	settings.c libbuzztard-core/settings.h libbuzztard-core/settings-private.h \
	setup.c libbuzztard-core/setup.h \
	sink-bin.c libbuzztard-core/sink-bin.h \
	sink-machine.c libbuzztard-core/sink-machine.h \
	song.c libbuzztard-core/song.h \
	song-info.c libbuzztard-core/song-info.h \
	song-io.c libbuzztard-core/song-io.h \
	song-io-native.c libbuzztard-core/song-io-native.h \
	song-io-native-bzt.c libbuzztard-core/song-io-native-bzt.h \
	song-io-native-xml.c libbuzztard-core/song-io-native-xml.h \
	source-machine.c libbuzztard-core/source-machine.h \
	wavetable.c libbuzztard-core/wavetable.h \
	wave.c libbuzztard-core/wave.h \
	wavelevel.c libbuzztard-core/wavelevel.h \
	wire.c libbuzztard-core/wire.h \
	wire-pattern.c libbuzztard-core/wire-pattern.h \
	\
  $(BUILT_SOURCES)

# yet unused sources
#	plainfile-settings.c libbuzztard-core/plainfile-settings.h \
#

libbuzztard_core_la_CFLAGS = \
	-I$(builddir)/libbuzztard-core \
	-I$(top_srcdir)/src/lib/ic \
	-DLOCALEDIR=\"$(localedir)\" \
	-DLIBDIR=\"$(libdir)\" \
	-DDATADIR=\"$(datadir)\" \
	-DG_LOG_DOMAIN=\"buzztard\" \
	$(BASE_DEPS_CFLAGS) \
	$(BT_CFLAGS)

noinst_HEADERS = core_private.h  marshal.h

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libbuzztard-core.pc

marshal.h: marshal.list
	glib-genmarshal --header --prefix=bt_marshal $(srcdir)/marshal.list > marshal.h

marshal.c: marshal.list
	glib-genmarshal --body --prefix=bt_marshal $(srcdir)/marshal.list > marshal.c

if USE_GIR

gir_sources=$(patsubst %,$(srcdir)/%, $(libbuzztard_core_la_SOURCES))

BuzztardCore-0.0.gir: $(G_IR_SCANNER) libbuzztard-core.la
	-$(AM_V_GEN)$(G_IR_SCANNER) -v \
	     --namespace=BuzztardCore \
	     --nsversion 0.0 \
	     -I$(builddir)/libbuzztard-core \
	     -I$(srcdir) \
	     -I$(srcdir)/libbuzztard_core/ \
	     -I$(top_srcdir)/src/lib/ic/libbuzztard-ic/ \
	     --add-include-path=$(top_srcdir)/src/lib/ic/ \
	     --identifier-prefix=Bt \
	     --symbol-prefix=bt \
	     --c-include='libbuzztard-core/core.h' \
	     --include=GLib-2.0 \
	     --include=GObject-2.0 \
	     --include=Gst-0.10 \
	     --include=libxml2-2.0 \
	     --include=BuzztardIc-0.0 \
	     --library=libbuzztard-core.la \
	     --libtool="$(top_builddir)/libtool" \
	     --pkg glib-2.0 \
	     --pkg gobject-2.0 \
	     --pkg libgstbuzztard \
	     --pkg libxml-2.0 \
	     --pkg gstreamer-0.10 \
	     --pkg-export libbuzztard-core \
	     --add-init-section="bt_init(NULL,NULL);" \
	     --output $@ \
	     $(gir_sources) || touch $@
BUILT_GIRSOURCES = BuzztardCore-0.0.gir

girdir = $(datadir)/gir
dist_gir_DATA = $(BUILT_GIRSOURCES)

typelibsdir = $(libdir)/girepository
typelibs_DATA = $(dist_gir_DATA:.gir=.typelib)

TXML = $(dist_gir_DATA:.gir=.gir.txml)

.gir.typelib:
	-$(AM_V_GEN)$(G_IR_COMPILER) --includedir=. --includedir=../ic $(G_IR_COMPILER_OPTS) $< -o $@ || touch $@
else
BUILT_GIRSOURCES=
endif

EXTRA_DIST = \
	libbuzztard-core.pc.in \
	marshal.list

# CLEANFILES is for files generated by make
CLEANFILES = marshal.c marshal.h \
  $(pkgconfig_DATA) \
  $(typelibs_DATA) $(TXML) \
  $(BUILT_GIRSOURCES)

include $(top_srcdir)/common.mak
