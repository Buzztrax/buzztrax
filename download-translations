#!/bin/sh
# Shell script to download the latest translations from translationproject.org


# LANGUAGES based on http://translationproject.org/extra/matrix.html
# We need to check all languages, not only po/LINGUAS, since there might be
# new translations
LANGUAGES=\
"ab af an ar ast be bg bn bn_IN ca ckb crh cs da de el en_GB eo es et eu "\
"fa fi fr fur ga gd gl gu he hi hr hu hy id is it ja ka kk kn ko ku ky lg "\
"lt lv mk ml mn mr ms mt nb ne nl nn or pa pl pt pt_BR ro ru rw sk sl sq "\
"sr sv sw ta te tg th tr uk ur vi wa wo zh_CN zh_HK zh_TW"

# for testing/debugging:
#LANGUAGES="es fr hu sv pl xx"

# print error message and exit; prefix problem matcher when in GitHub Actions
err_msg() {
  local prefix
  [ -n "$CI" ] && prefix="::error::"
  echo $prefix"$*" >&2
  exit 1
}

# print warning message; prefix problem matcher when in GitHub Actions
warn_msg() {
  local prefix
  [ -n "$CI" ] && prefix="::warning::"
  echo $prefix"$*" >&2
}

# check for 'diff' program
diff --version 2>/dev/null >/dev/null || \
  err_msg "You must have the 'diff' program installed for this script."

# check for 'wget' program
wget --version 2>/dev/null >/dev/null || \
  err_msg "You must have the 'wget' program installed for this script."

# check for 'msguniq' program
msguniq --version 2>/dev/null >/dev/null || \
  err_msg "You must have the 'gettext' package installed for this script."

# make sure we're in the top-level directory
[ -d ./po ] || \
  err_msg "No ./po directory in the current working directory."

DOMAIN="buzztrax"

LANGUAGES_TO_ADD=""
LANGUAGES_UPDATED=""

echo "Downloading latest translation files for domain $DOMAIN ..."
echo

for l in $LANGUAGES
do
  DOMAIN_PO_URL_BASE="http://translationproject.org/latest/$DOMAIN"
  PO_URL="$DOMAIN_PO_URL_BASE/$l.po"
  PO_FILENAME="$DOMAIN.$l.po"
  if wget -q -nc -O $PO_FILENAME $PO_URL; then
    # we want all .po files in UTF-8 format really, so convert if needed..
    CHARSET=`grep Content-Type $PO_FILENAME | sed -e 's/.*charset=\(.*\)\\\\n.*/\1/'`
    if test "x$CHARSET" != "xUTF-8" -a "x$CHARSET" != "xutf-8"; then
      # note: things like the bugs address will be added back by make update-po
      if msguniq $PO_FILENAME --no-location \
                              --output-file=$PO_FILENAME.utf8 \
                              --to-code=UTF-8; then
        mv $PO_FILENAME.utf8 $PO_FILENAME
      else
        warn_msg "**** $l: conversion from $CHARSET to UTF-8 failed ****"
      fi
    fi
    if [ -f "po/$l.po" ]; then
      # ./po/foo.po exists, so let's check if ours matches the latest from the
      # translation project website
      REVDATE_NEW=`grep PO-Revision-Date $PO_FILENAME`;
      REVDATE_OLD=`grep PO-Revision-Date po/$l.po`;
      CHARSET_OLD=`grep Content-Type po/$l.po | sed -e 's/.*charset=\(.*\)\\\\n.*/\1/'`
      if test "x$REVDATE_NEW" = "x$REVDATE_OLD" -a "x$CHARSET_OLD" = "xUTF-8"; then
        # note: source code line markers will be removed later by make upload-po
        echo "$l.po: up-to-date"
        rm -f $PO_FILENAME
      else
        mv $PO_FILENAME "po/$l.po"
        if test "x$CHARSET_OLD" != "xUTF-8" -a "x$CHARSET_OLD" != "xutf-8"; then
          echo "$l.po: update (and charset converted from $CHARSET_OLD to UTF-8)"
        else
          echo "$l.po: updated"
        fi
        LANGUAGES_UPDATED="$LANGUAGES_UPDATED $l"
      fi
    else
      # ./po/foo.po doesn't exist, but foo.po exists on the translation project
      # website, so it's probably a new translation
      echo "$l.po: new language"
      mv $PO_FILENAME "po/$l.po"
      LANGUAGES_TO_ADD="$LANGUAGES_TO_ADD $l"
    fi
  else
    rm -f $PO_FILENAME
    echo "$l.po: failure (probably does not exist yet)"
  fi
done

if [ -n "$LANGUAGES_UPDATED" ] || [ -n "$LANGUAGES_TO_ADD" ]; then
  echo "===================================================================="
  echo
  echo "Language codes updated    :$LANGUAGES_UPDATED"
  echo "Language codes to git add :$LANGUAGES_TO_ADD"
  echo
  echo "Source: http://translationproject.org/latest/$DOMAIN/"
  echo
  if [ -n "$LANGUAGES_UPDATED" ]; then
    CMD_STRING="git add"
    for l in $LANGUAGES_UPDATED; do
      CMD_STRING="$CMD_STRING po/$l.po"
    done
    CMD_STRING="$CMD_STRING; git commit -m 'po: update translations'"
    echo "To commit the updated translations, please run:"
    echo
    echo "  $CMD_STRING"
    echo
    echo
  fi
  if [ -n "$LANGUAGES_TO_ADD" ]; then
    echo "Edit 'po/LINGUAS' adding the following new language codes:"
    echo
    echo "  $LANGUAGES_TO_ADD"
    echo
    CMD_STRING="git add"
    for l in $LANGUAGES_TO_ADD; do
      CMD_STRING="$CMD_STRING po/$l.po"
    done
    CMD_STRING="$CMD_STRING po/LINGUAS; git commit -m 'po: add new translations'"
    echo "and now add the new translations, please run:"
    echo
    echo "  $CMD_STRING"
    echo
    echo
  fi
  echo "===================================================================="
fi


