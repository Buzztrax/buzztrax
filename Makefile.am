## Process this file with automake to produce Makefile.in

# AM_GNU_GETTEXT requires po in SUBDIRS
SUBDIRS = po docs/help/bt-edit
# see fake subdir rules
FAKE_SUBDIRS = \
  docs/reference/bt-core docs/reference/bt-ic \
  docs/reference/bt-cmd docs/reference/bt-edit
DIST_SUBDIRS = $(SUBDIRS) $(FAKE_SUBDIRS)

ACLOCAL_AMFLAGS = -I m4
DISTCHECK_CONFIGURE_FLAGS = --enable-gtk-doc --enable-debug --disable-scrollkeeper

AM_CPPFLAGS = \
	-I$(top_srcdir)/src/lib/core \
	-I$(top_srcdir)/src/lib/ic \
	-DPREFIX=\"$(prefix)\" \
	-DSYSCONFDIR=\"$(sysconfdir)\" \
	-DLOCALEDIR=\"$(localedir)\" \
	-DLIBDIR=\"$(libdir)\" \
	-DDATADIR=\"$(datadir)\" \
	-DTESTSONGDIR=\"$(abs_top_srcdir)/tests/songs\" \
	-DG_LOG_DOMAIN=\"buzztard\" \
	-DG_SETTINGS_ENABLE_BACKEND \
	$(BASE_DEPS_CFLAGS) \
	$(BT_CFLAGS)

AM_LDFLAGS = $(BT_LDFLAGS)

EXTRA_DIST = \
	org.buzztard.gschema.xml \
	buzztard.convert \
	intltool-extract.in \
	intltool-merge.in \
	intltool-update.in \
	COPYING-DOCS \
	omf.make \
	xmldocs.make \
	TODO \
	docs/version.entities.in \
	docs/buzztard.xsd \
	po/$(GETTEXT_PACKAGE).pot

# BUILT_SOURCES is for generated source
BUILT_SOURCES = builddirs
	
# CLEANFILES is for files generated by make
CLEANFILES = 

# DISTCLEANFILES is for files generated by configure
DISTCLEANFILES = \
	intltool-extract \
	intltool-merge \
	intltool-update \
	docs/version.entities

include $(top_srcdir)/Makefile.pixmaps.am
include $(top_srcdir)/Makefile.src.am
include $(top_srcdir)/Makefile.tests.am

# -- settings

# gsettings_SCHEMAS is a list of all the schemas you want to install
gsettings_SCHEMAS = org.buzztard.gschema.xml

# include the appropriate makefile rules for schema handling
@GSETTINGS_RULES@

# convert the gconf data to gsettings
gconfconvertdir = $(datadir)/GConf/gsettings
gconfconvert_DATA = buzztard.convert 

#-- fake subdir rules

docs: docs-bt-core docs-bt-ic docs-bt-cmd docs-bt-edit 

docs/reference/version.entities:
	@cp docs/version.entities docs/reference/

docs-bt-core: libbuzztard-core.la docs/reference/version.entities
	@$(MAKE) -C docs/reference/bt-core

docs-bt-ic: libbuzztard-ic.la docs/reference/version.entities
	@$(MAKE) -C docs/reference/bt-ic

docs-bt-cmd: libbtcmd.la docs/reference/version.entities
	@$(MAKE) -C docs/reference/bt-cmd

docs-bt-edit: libbtedit.la docs/reference/version.entities
	@$(MAKE) -C docs/reference/bt-edit

all-local: docs

check-local:
	@for dir in $(FAKE_SUBDIRS); do $(MAKE) -C $$dir check; done

clean-local: test-clean-local
	-@rm docs/reference/version.entities
	-@rm -f po/.intltool-merge-cache
	@for dir in $(FAKE_SUBDIRS); do \
	  if test -f $$dir/Makefile; then \
	    $(MAKE) -C $$dir clean; \
	  fi; \
	done	

install-data-local:
	@for dir in $(FAKE_SUBDIRS); do $(MAKE) -C $$dir install-data; done

uninstall-local:
	@for dir in $(FAKE_SUBDIRS); do $(MAKE) -C $$dir uninstall; done

# silly hack to fix make distcheck on a clean package
po/$(GETTEXT_PACKAGE).pot:
	$(MAKE) -C po update-po

## this seems to fail during make distcheck
##uninstall-local:
##	rm -r $(datadir)/$(PACKAGE)

install-data-hook: update-icon-cache update-desktop-db update-mime-db
uninstall-hook: update-icon-cache update-desktop-db update-mime-db

## We get warnings for left-over files when doing 'make distuninstallcheck'
distuninstallcheck_listfiles = find . -type f -print

## Workaround for scrollkeeper bug
distuninstallcheck_listfiles += | grep -v '/var/scrollkeeper'
## Workaround for installing files in own prefix
distuninstallcheck_listfiles += | grep -v '/share/mime'
## Workaround for installing icon theme in own prefix
distuninstallcheck_listfiles += | grep -v 'icon-theme.cache'

# the mkdir is needed because of an INTLTOOL bug
# https://bugs.launchpad.net/intltool/+bug/605826
builddirs:
	$(AM_V_at)$(MKDIR_P) src/lib/core/songio/bsl/ src/ui/edit


.PHONY: \
  builddirs \
  docs docs-bt-core docs-bt-ic docs-bt-cmd docs-bt-edit \
  install-gconf uninstall-gconf \
  update-icon-cache update-desktop-db update-mime-db \
  dict cc10 cc20

# make dict            -- create an aspell dictionary from tags
dict:: tags
	echo "personal_ws" >$(PACKAGE).aspell_dict
	@find . -name tags -exec grep -v "$\!" {} \; | cut -f1 | sort | uniq >>$(PACKAGE).aspell_dict

# -k2 in sort for Tranditional McCabe Cyclomatic Complexity
# make cc10            -- report McCabe Cyclomatic Complexity
# make cc20            -- report McCabe Cyclomatic Complexity
cc10::
	@pmccabe `find src -name '*.c'` | sort -nr | awk '($$1 > 10)'
cc20::
	@pmccabe `find src -name '*.c'` | sort -nr | awk '($$1 > 20)'

include $(top_srcdir)/common.mak
